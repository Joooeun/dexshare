-- =====================================================
-- 1. 사용자 관리 테이블
-- =====================================================

-- 사용자 테이블
CREATE TABLE USERS (
    USER_ID VARCHAR(50) NOT NULL PRIMARY KEY,
    USER_NAME VARCHAR(100) NOT NULL,
    PASSWORD VARCHAR(255) NOT NULL,  -- 암호화 필수
    TEMP_PASSWORD VARCHAR(255),      -- 임시 비밀번호
    STATUS VARCHAR(20) DEFAULT 'ACTIVE', -- ACTIVE, INACTIVE, LOCKED
    IP_RESTRICTION VARCHAR(500),     -- IP 제한 (JSON)
    LAST_LOGIN_TIMESTAMP TIMESTAMP,
    LOGIN_FAIL_COUNT INTEGER DEFAULT 0,  -- 계정 잠금용
    PASSWORD_CHANGE_DATE DATE,
    CREATED_BY VARCHAR(50),
    CREATED_TIMESTAMP TIMESTAMP DEFAULT CURRENT TIMESTAMP,
    MODIFIED_BY VARCHAR(50),
    MODIFIED_TIMESTAMP TIMESTAMP DEFAULT CURRENT TIMESTAMP
);

-- 사용자 그룹 테이블
CREATE TABLE USER_GROUPS (
    GROUP_ID VARCHAR(50) NOT NULL PRIMARY KEY,
    GROUP_NAME VARCHAR(100) NOT NULL,
    GROUP_DESCRIPTION VARCHAR(500),
    STATUS VARCHAR(20) DEFAULT 'ACTIVE',
    CREATED_BY VARCHAR(50),
    CREATED_TIMESTAMP TIMESTAMP DEFAULT CURRENT TIMESTAMP,
    MODIFIED_BY VARCHAR(50),
    MODIFIED_TIMESTAMP TIMESTAMP DEFAULT CURRENT TIMESTAMP
);

-- 사용자-그룹 매핑 테이블 (단일 그룹 제약)
CREATE TABLE USER_GROUP_MAPPING (
    USER_ID VARCHAR(50) NOT NULL,
    GROUP_ID VARCHAR(50) NOT NULL,
    ASSIGNED_BY VARCHAR(50),
    ASSIGNED_TIMESTAMP TIMESTAMP DEFAULT CURRENT TIMESTAMP,
    PRIMARY KEY (USER_ID),
    FOREIGN KEY (USER_ID) REFERENCES USERS(USER_ID) ON DELETE CASCADE,
    FOREIGN KEY (GROUP_ID) REFERENCES USER_GROUPS(GROUP_ID) ON DELETE CASCADE
);

-- =====================================================
-- 2. 연결 정보 테이블 (SQL_CONTENT에서 참조하므로 먼저 생성)
-- =====================================================

-- 데이터베이스 연결 정보
CREATE TABLE DATABASE_CONNECTION (
    CONNECTION_ID VARCHAR(100) NOT NULL PRIMARY KEY,
    DB_TYPE VARCHAR(20) NOT NULL,
    HOST_IP VARCHAR(45) NOT NULL,
    PORT INTEGER,
    DATABASE_NAME VARCHAR(100),
    USERNAME VARCHAR(100) NOT NULL,
    PASSWORD VARCHAR(255) NOT NULL,
    JDBC_DRIVER_FILE VARCHAR(200),
    TEST_SQL VARCHAR(1000),              -- 연결 테스트용 SQL
    CONNECTION_POOL_SETTINGS CLOB,
    CONNECTION_TIMEOUT INTEGER DEFAULT 15,
    QUERY_TIMEOUT INTEGER DEFAULT 600,
    MAX_POOL_SIZE INTEGER DEFAULT 10,
    MIN_POOL_SIZE INTEGER DEFAULT 2,
    STATUS VARCHAR(20) DEFAULT 'ACTIVE',
    MONITORING_ENABLED BOOLEAN DEFAULT FALSE,
    MONITORING_INTERVAL INTEGER DEFAULT 5, -- 5분 (초 단위)
    CREATED_BY VARCHAR(50) NOT NULL,
    CREATED_TIMESTAMP TIMESTAMP DEFAULT CURRENT TIMESTAMP,
    MODIFIED_BY VARCHAR(50),
    MODIFIED_TIMESTAMP TIMESTAMP DEFAULT CURRENT TIMESTAMP
);

-- SFTP 연결 정보
CREATE TABLE SFTP_CONNECTION (
    SFTP_CONNECTION_ID VARCHAR(100) NOT NULL PRIMARY KEY,
    HOST_IP VARCHAR(45) NOT NULL,
    PORT INTEGER DEFAULT 22,
    USERNAME VARCHAR(100) NOT NULL,
    PASSWORD VARCHAR(255),
    PRIVATE_KEY_PATH VARCHAR(500),
    REMOTE_PATH VARCHAR(500),
    CONNECTION_TIMEOUT INTEGER DEFAULT 30,
    STATUS VARCHAR(20) DEFAULT 'ACTIVE',
    CREATED_BY VARCHAR(50) NOT NULL,
    CREATED_TIMESTAMP TIMESTAMP DEFAULT CURRENT TIMESTAMP,
    MODIFIED_BY VARCHAR(50),
    MODIFIED_TIMESTAMP TIMESTAMP DEFAULT CURRENT TIMESTAMP
);

-- =====================================================
-- 3. SQL 템플릿 관련 테이블
-- =====================================================

-- SQL 템플릿 카테고리
CREATE TABLE SQL_TEMPLATE_CATEGORY (
    CATEGORY_ID VARCHAR(50) NOT NULL PRIMARY KEY,
    CATEGORY_NAME VARCHAR(100) NOT NULL,
    CATEGORY_DESCRIPTION VARCHAR(500),
    CATEGORY_ORDER INTEGER DEFAULT 0,
    STATUS VARCHAR(20) DEFAULT 'ACTIVE',
    CREATED_BY VARCHAR(50),
    CREATED_TIMESTAMP TIMESTAMP DEFAULT CURRENT TIMESTAMP,
    MODIFIED_BY VARCHAR(50),
    MODIFIED_TIMESTAMP TIMESTAMP DEFAULT CURRENT TIMESTAMP
);

-- SQL 템플릿 기본 정보
CREATE TABLE SQL_TEMPLATE (
    TEMPLATE_ID VARCHAR(100) NOT NULL PRIMARY KEY,
    TEMPLATE_NAME VARCHAR(200) NOT NULL,
    TEMPLATE_DESC VARCHAR(500),
    SQL_CONTENT CLOB NOT NULL,
    ACCESSIBLE_CONNECTION_IDS VARCHAR(500),
    CHART_MAPPING VARCHAR(50),  -- 차트 매핑 ID (APPL_COUNT, LOCK_WAIT_COUNT, ACTIVE_LOG, FILESYSTEM)
    VERSION INTEGER DEFAULT 1,
    STATUS VARCHAR(20) DEFAULT 'ACTIVE',
    EXECUTION_LIMIT INTEGER DEFAULT 0,
    REFRESH_TIMEOUT INTEGER DEFAULT 0,
    NEWLINE BOOLEAN DEFAULT TRUE,
    AUDIT BOOLEAN DEFAULT FALSE,
    CREATED_BY VARCHAR(50) NOT NULL,
    CREATED_TIMESTAMP TIMESTAMP DEFAULT CURRENT TIMESTAMP,
    MODIFIED_BY VARCHAR(50),
    MODIFIED_TIMESTAMP TIMESTAMP DEFAULT CURRENT TIMESTAMP
);

-- SQL 템플릿 파라미터
CREATE TABLE SQL_TEMPLATE_PARAMETER (
    PARAMETER_ID BIGINT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    TEMPLATE_ID VARCHAR(100) NOT NULL,
    PARAMETER_NAME VARCHAR(100) NOT NULL,
    PARAMETER_TYPE VARCHAR(20) DEFAULT 'STRING',
    PARAMETER_ORDER INTEGER DEFAULT 0,
    IS_REQUIRED BOOLEAN DEFAULT FALSE,
    DEFAULT_VALUE VARCHAR(500),
    IS_READONLY BOOLEAN DEFAULT FALSE,
    IS_HIDDEN BOOLEAN DEFAULT FALSE,
    IS_DISABLED BOOLEAN DEFAULT FALSE,
    DESCRIPTION VARCHAR(500),
    CREATED_TIMESTAMP TIMESTAMP DEFAULT CURRENT TIMESTAMP,
    MODIFIED_TIMESTAMP TIMESTAMP DEFAULT CURRENT TIMESTAMP,
    FOREIGN KEY (TEMPLATE_ID) REFERENCES SQL_TEMPLATE(TEMPLATE_ID) ON DELETE CASCADE
);

-- SQL 템플릿 단축키
CREATE TABLE SQL_TEMPLATE_SHORTCUT (
    SHORTCUT_ID BIGINT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    SOURCE_TEMPLATE_ID VARCHAR(100) NOT NULL,
    TARGET_TEMPLATE_ID VARCHAR(100) NOT NULL,
    SHORTCUT_KEY VARCHAR(50) NOT NULL,
    SHORTCUT_NAME VARCHAR(100) NOT NULL,
    SHORTCUT_DESCRIPTION VARCHAR(500),
    SOURCE_COLUMN_INDEXES VARCHAR(200),
    AUTO_EXECUTE BOOLEAN DEFAULT TRUE,
    IS_ACTIVE BOOLEAN DEFAULT TRUE,
    CREATED_TIMESTAMP TIMESTAMP DEFAULT CURRENT TIMESTAMP,
    MODIFIED_TIMESTAMP TIMESTAMP DEFAULT CURRENT TIMESTAMP,
    FOREIGN KEY (SOURCE_TEMPLATE_ID) REFERENCES SQL_TEMPLATE(TEMPLATE_ID) ON DELETE CASCADE,
    FOREIGN KEY (TARGET_TEMPLATE_ID) REFERENCES SQL_TEMPLATE(TEMPLATE_ID) ON DELETE CASCADE
);

-- SQL 템플릿-카테고리 매핑 테이블
CREATE TABLE SQL_TEMPLATE_CATEGORY_MAPPING (
    TEMPLATE_ID VARCHAR(100) NOT NULL,
    CATEGORY_ID VARCHAR(50) NOT NULL,
    MAPPING_ORDER INTEGER DEFAULT 0,
    CREATED_BY VARCHAR(50),
    CREATED_TIMESTAMP TIMESTAMP DEFAULT CURRENT TIMESTAMP,
    PRIMARY KEY (TEMPLATE_ID, CATEGORY_ID),
    FOREIGN KEY (TEMPLATE_ID) REFERENCES SQL_TEMPLATE(TEMPLATE_ID) ON DELETE CASCADE,
    FOREIGN KEY (CATEGORY_ID) REFERENCES SQL_TEMPLATE_CATEGORY(CATEGORY_ID) ON DELETE CASCADE
);

-- SQL 내용 관리 테이블 (추가 DB별 SQL 내용)
CREATE TABLE SQL_CONTENT (
    CONTENT_ID VARCHAR(50) NOT NULL PRIMARY KEY,
    TEMPLATE_ID VARCHAR(100) NOT NULL,
    DB_TYPE VARCHAR(20) NOT NULL,  -- DB 타입 (ORACLE, DB2, MYSQL 등)
    SQL_CONTENT CLOB NOT NULL,
    VERSION INTEGER DEFAULT 1,
    CREATED_BY VARCHAR(50) NOT NULL,
    CREATED_TIMESTAMP TIMESTAMP DEFAULT CURRENT TIMESTAMP,
    MODIFIED_BY VARCHAR(50),
    MODIFIED_TIMESTAMP TIMESTAMP DEFAULT CURRENT TIMESTAMP,
    FOREIGN KEY (TEMPLATE_ID) REFERENCES SQL_TEMPLATE(TEMPLATE_ID) ON DELETE CASCADE
);

-- 그룹-카테고리 매핑 테이블
CREATE TABLE GROUP_CATEGORY_MAPPING (
    GROUP_ID VARCHAR(50) NOT NULL,
    CATEGORY_ID VARCHAR(50) NOT NULL,
    GRANTED_BY VARCHAR(50),
    GRANTED_TIMESTAMP TIMESTAMP DEFAULT CURRENT TIMESTAMP,
    PRIMARY KEY (GROUP_ID, CATEGORY_ID),
    FOREIGN KEY (GROUP_ID) REFERENCES USER_GROUPS(GROUP_ID) ON DELETE CASCADE,
    FOREIGN KEY (CATEGORY_ID) REFERENCES SQL_TEMPLATE_CATEGORY(CATEGORY_ID) ON DELETE CASCADE
);

-- 그룹-연결정보 매핑 테이블
CREATE TABLE GROUP_CONNECTION_MAPPING (
    GROUP_ID VARCHAR(50) NOT NULL,
    CONNECTION_ID VARCHAR(100) NOT NULL,
    GRANTED_BY VARCHAR(50),
    GRANTED_TIMESTAMP TIMESTAMP DEFAULT CURRENT TIMESTAMP,
    PRIMARY KEY (GROUP_ID, CONNECTION_ID),
    FOREIGN KEY (GROUP_ID) REFERENCES USER_GROUPS(GROUP_ID) ON DELETE CASCADE
);

-- 감사 로그 테이블
CREATE TABLE AUDIT_LOGS (
    LOG_ID BIGINT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    USER_ID VARCHAR(50),
    ACTION_TYPE VARCHAR(50) NOT NULL,    -- LOGIN, LOGOUT, CREATE, UPDATE, DELETE, EXECUTE
    RESOURCE_TYPE VARCHAR(50),           -- USER, SQL_TEMPLATE, CONNECTION
    RESOURCE_ID VARCHAR(100),            -- 리소스 ID
    OLD_VALUE CLOB,                      -- 변경 전 값
    NEW_VALUE CLOB,                      -- 변경 후 값
    IP_ADDRESS VARCHAR(45),
    USER_AGENT VARCHAR(500),
    SESSION_ID VARCHAR(100),
    EXECUTION_TIME INTEGER,              -- 실행 시간 (ms)
    STATUS VARCHAR(20) DEFAULT 'SUCCESS', -- SUCCESS, FAIL, ERROR
    ERROR_MESSAGE VARCHAR(1000),
    CREATED_TIMESTAMP TIMESTAMP DEFAULT CURRENT TIMESTAMP
);

-- 사용자 세션 테이블
CREATE TABLE USER_SESSIONS (
    SESSION_ID VARCHAR(100) NOT NULL PRIMARY KEY,
    USER_ID VARCHAR(50) NOT NULL,
    IP_ADDRESS VARCHAR(45),
    USER_AGENT VARCHAR(500),
    LOGIN_TIMESTAMP TIMESTAMP DEFAULT CURRENT TIMESTAMP,
    LAST_ACCESS_TIMESTAMP TIMESTAMP DEFAULT CURRENT TIMESTAMP,  -- 세션 만료 체크용
    SESSION_DATA CLOB,                   -- 세션 데이터 (JSON)
    STATUS VARCHAR(20) DEFAULT 'ACTIVE', -- ACTIVE, EXPIRED, LOGOUT
    FOREIGN KEY (USER_ID) REFERENCES USERS(USER_ID) ON DELETE CASCADE
);

-- =====================================================
-- 4. 로그 테이블
-- =====================================================

-- DeX 로그 테이블
CREATE TABLE DEXLOG (
    USER_ID VARCHAR(20),
    IP VARCHAR(20),
    CONN_DB VARCHAR(20),
    MENU VARCHAR(20),
    SQL_TYPE VARCHAR(20),
    RESULT_ROWS INTEGER,
    SQL_TEXT CLOB,
    RESULT_MSG VARCHAR(2000),
    DURATION INTEGER,
    EXECUTE_DATE TIMESTAMP,
    XML_LOG XML,
    LOG_ID VARCHAR(50)
);

-- =====================================================
-- 5. 시스템 설정 테이블
-- =====================================================

-- 시스템 설정 (system.properties 마이그레이션용)
CREATE TABLE SYSTEM_CONFIG (
    CONFIG_KEY VARCHAR(100) NOT NULL PRIMARY KEY,
    CONFIG_VALUE VARCHAR(500),
    CONFIG_DESC VARCHAR(200),
    CREATED_DATE TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UPDATED_DATE TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);


-- =====================================================
-- 7. 기본 SQL 템플릿 카테고리 생성
-- =====================================================

INSERT INTO SQL_TEMPLATE_CATEGORY (CATEGORY_ID, CATEGORY_NAME, CATEGORY_DESCRIPTION, CATEGORY_ORDER, STATUS, CREATED_BY, CREATED_TIMESTAMP) VALUES
('DASHBOARD', '대시보드', '대시보드 관련 SQL 템플릿', 1, 'ACTIVE', 'SYSTEM', CURRENT TIMESTAMP),
('REPORT', '리포트', '리포트 관련 SQL 템플릿', 2, 'ACTIVE', 'SYSTEM', CURRENT TIMESTAMP),
('MONITORING', '모니터링', '시스템 모니터링 관련 SQL 템플릿', 3, 'ACTIVE', 'SYSTEM', CURRENT TIMESTAMP),
('ADMIN', '관리', '시스템 관리 관련 SQL 템플릿', 4, 'ACTIVE', 'SYSTEM', CURRENT TIMESTAMP),
('UTILITY', '유틸리티', '유틸리티 관련 SQL 템플릿', 5, 'ACTIVE', 'SYSTEM', CURRENT TIMESTAMP);

-- =====================================================
-- 10. 기본 그룹 생성
-- =====================================================

INSERT INTO USER_GROUPS (GROUP_ID, GROUP_NAME, GROUP_DESCRIPTION, STATUS, CREATED_BY, CREATED_TIMESTAMP)
VALUES 
('ADMIN_GROUP', '관리자 그룹', '시스템 관리자 그룹', 'ACTIVE', 'SYSTEM', CURRENT TIMESTAMP),
('USER_GROUP', '일반 사용자 그룹', '일반 사용자 그룹', 'ACTIVE', 'SYSTEM', CURRENT TIMESTAMP),
('VIEWER_GROUP', '조회 전용 그룹', '조회만 가능한 사용자 그룹', 'ACTIVE', 'SYSTEM', CURRENT TIMESTAMP);

-- =====================================================
-- 11. 관리자 계정 생성
-- =====================================================

-- 관리자 사용자 생성 (암호화된 비밀번호: 1234)
-- Crypto.crypt("1234") 결과값 사용
INSERT INTO USERS (USER_ID, USER_NAME, PASSWORD, STATUS, CREATED_BY, CREATED_TIMESTAMP)
VALUES ('admin', '관리자', '1e0ce442a8e20cc64b534494d7aea44e', 'ACTIVE', 'SYSTEM', CURRENT TIMESTAMP);

-- 관리자를 관리자 그룹에 할당
INSERT INTO USER_GROUP_MAPPING (USER_ID, GROUP_ID, ASSIGNED_BY, ASSIGNED_TIMESTAMP)
VALUES ('admin', 'ADMIN_GROUP', 'SYSTEM', CURRENT TIMESTAMP);

-- =====================================================
-- 12. 관리자 권한 설정 (와일드카드 권한)
-- =====================================================

-- 관리자 그룹에 모든 카테고리 권한 부여
INSERT INTO GROUP_CATEGORY_MAPPING (GROUP_ID, CATEGORY_ID, GRANTED_BY, GRANTED_TIMESTAMP)
SELECT 'ADMIN_GROUP', CATEGORY_ID, 'SYSTEM', CURRENT TIMESTAMP
FROM SQL_TEMPLATE_CATEGORY;

-- 관리자 그룹에 모든 연결 정보 권한 부여
INSERT INTO GROUP_CONNECTION_MAPPING (GROUP_ID, CONNECTION_ID, GRANTED_BY, GRANTED_TIMESTAMP)
SELECT 'ADMIN_GROUP', CONNECTION_ID, 'SYSTEM', CURRENT TIMESTAMP
FROM DATABASE_CONNECTION;

-- =====================================================
-- 13. 테스트 사용자 생성 (선택사항)
-- =====================================================

-- 테스트 사용자 생성 (비밀번호: test123)
-- Crypto.crypt("test123") 결과값 사용
INSERT INTO USERS (USER_ID, USER_NAME, PASSWORD, STATUS, CREATED_BY, CREATED_TIMESTAMP)
VALUES ('testuser', '테스트 사용자', '1e0ce442a8e20cc64b534494d7aea44e', 'ACTIVE', 'SYSTEM', CURRENT TIMESTAMP);

-- 테스트 사용자를 일반 사용자 그룹에 할당
INSERT INTO USER_GROUP_MAPPING (USER_ID, GROUP_ID, ASSIGNED_BY, ASSIGNED_TIMESTAMP)
VALUES ('testuser', 'USER_GROUP', 'SYSTEM', CURRENT TIMESTAMP);

-- =====================================================
-- 14. 초기 시스템 설정 데이터 삽입
-- =====================================================


-- SYSTEM_CONFIG 테이블 기본 설정값 삽입 (system.properties 마이그레이션용)
-- 공지사항 내용 (기본값: 빈 문자열)
INSERT INTO SYSTEM_CONFIG (CONFIG_KEY, CONFIG_VALUE, CONFIG_DESC, CREATED_DATE, UPDATED_DATE) 
SELECT 'NOTICE_CONTENT', '', '공지사항 내용', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP
FROM SYSIBM.SYSDUMMY1
WHERE NOT EXISTS (SELECT 1 FROM SYSTEM_CONFIG WHERE CONFIG_KEY = 'NOTICE_CONTENT');

-- 공지사항 활성화 여부 (기본값: false)
INSERT INTO SYSTEM_CONFIG (CONFIG_KEY, CONFIG_VALUE, CONFIG_DESC, CREATED_DATE, UPDATED_DATE) 
SELECT 'NOTICE_ENABLED', 'false', '공지사항 활성화 여부 (true/false)', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP
FROM SYSIBM.SYSDUMMY1
WHERE NOT EXISTS (SELECT 1 FROM SYSTEM_CONFIG WHERE CONFIG_KEY = 'NOTICE_ENABLED');

-- 세션 타임아웃 설정
INSERT INTO SYSTEM_CONFIG (CONFIG_KEY, CONFIG_VALUE, CONFIG_DESC, CREATED_DATE, UPDATED_DATE) 
SELECT 'SESSION_TIMEOUT', '600', '세션 타임아웃 (분 단위)', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP
FROM SYSIBM.SYSDUMMY1
WHERE NOT EXISTS (SELECT 1 FROM SYSTEM_CONFIG WHERE CONFIG_KEY = 'SESSION_TIMEOUT');

-- 다운로드 IP 패턴 설정
INSERT INTO SYSTEM_CONFIG (CONFIG_KEY, CONFIG_VALUE, CONFIG_DESC, CREATED_DATE, UPDATED_DATE) 
SELECT 'DOWNLOAD_IP_PATTERN', '10.240.13.*', '다운로드 허용 IP 패턴 (* = 모든 IP 허용)', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP
FROM SYSIBM.SYSDUMMY1
WHERE NOT EXISTS (SELECT 1 FROM SYSTEM_CONFIG WHERE CONFIG_KEY = 'DOWNLOAD_IP_PATTERN');

-- =====================================================
-- 15. 테스트 데이터 삽입 (선택사항)
-- =====================================================

-- 테스트용 데이터베이스 연결 (먼저 삽입)
INSERT INTO DATABASE_CONNECTION (CONNECTION_ID,DB_TYPE,HOST_IP,PORT,DATABASE_NAME,USERNAME,PASSWORD,JDBC_DRIVER_FILE,TEST_SQL,CONNECTION_POOL_SETTINGS,CONNECTION_TIMEOUT,QUERY_TIMEOUT,MAX_POOL_SIZE,MIN_POOL_SIZE,STATUS,MONITORING_ENABLED,MONITORING_INTERVAL,CREATED_BY,CREATED_TIMESTAMP,MODIFIED_BY,MODIFIED_TIMESTAMP) VALUES
	 ('test_db','DB2','192.168.219.116',50000,'SAMPLE','db2inst1','1234','jcc-11.5.0.0.jar','SELECT 1 FROM SYSIBM.SYSDUMMY1',NULL,15,600,10,2,'ACTIVE',FALSE,10,'SYSTEM',CURRENT TIMESTAMP,NULL,CURRENT TIMESTAMP);

-- =====================================================
-- 17. 실제 데이터에 대한 권한 설정 (와일드카드 권한과 별도)
-- =====================================================

-- 관리자 그룹에 모든 카테고리 권한 부여 (중복 방지)
INSERT INTO GROUP_CATEGORY_MAPPING (GROUP_ID, CATEGORY_ID, GRANTED_BY, GRANTED_TIMESTAMP)
SELECT 'ADMIN_GROUP', CATEGORY_ID, 'SYSTEM', CURRENT TIMESTAMP
FROM SQL_TEMPLATE_CATEGORY
WHERE NOT EXISTS (
    SELECT 1 FROM GROUP_CATEGORY_MAPPING 
    WHERE GROUP_ID = 'ADMIN_GROUP' AND CATEGORY_ID = SQL_TEMPLATE_CATEGORY.CATEGORY_ID
);

-- 관리자 그룹에 모든 연결 정보 권한 부여 (중복 방지)
INSERT INTO GROUP_CONNECTION_MAPPING (GROUP_ID, CONNECTION_ID, GRANTED_BY, GRANTED_TIMESTAMP)
SELECT 'ADMIN_GROUP', CONNECTION_ID, 'SYSTEM', CURRENT TIMESTAMP
FROM DATABASE_CONNECTION
WHERE NOT EXISTS (
    SELECT 1 FROM GROUP_CONNECTION_MAPPING 
    WHERE GROUP_ID = 'ADMIN_GROUP' AND CONNECTION_ID = DATABASE_CONNECTION.CONNECTION_ID
);